services:
  logstash:
    image: docker.elastic.co/logstash/logstash:8.14.0
    container_name: logstash
    networks:
      - vagrant_net
    restart: unless-stopped
    depends_on:
      elasticsearch:
        condition: service_healthy
    ports:
      - "5044:5044"
      #- "5000:5000"
      - "9600:9600"
    volumes:
      - ./logstash/pipeline/logstash.conf:/usr/share/logstash/pipeline/logstash.conf

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
  #   environment:
  #     - discovery.type=single-node
  #     - bootstrap.memory_lock=true
  #     - xpack.security.enabled=false
  #     - ES_JAVA_OPTS=-Xms1g -Xmx1g
  #   ports:
  #     - "9200:9200"
  #   networks:
  #     - vagrant_net
  #   ulimits:
  #     memlock:
  #       soft: -1
  #       hard: -1
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:9200"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 10
  #   command: >
  #     bash -c "
  #       /usr/local/bin/docker-entrypoint.sh &
  #       pid=\$!;
  #       until curl -s http://localhost:9200 >/dev/null; do sleep 1; done;
  #       curl -X PUT 'http://localhost:9200/default-index' -H 'Content-Type: application/json' -d '{}';
  #       wait \$pid
  #     "
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - "cluster.routing.allocation.disk.watermark.low=95%"
      - "cluster.routing.allocation.disk.watermark.high=98%"
      - "cluster.routing.allocation.disk.watermark.flood_stage=99%"
    ports:
      - "9200:9200"
    networks:
      - vagrant_net
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - ./esdata:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9200"]
      interval: 10s
      timeout: 5s
      retries: 10
  
  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.2
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - vagrant_net
    depends_on:
      - elasticsearch

networks:
  vagrant_net:
    driver: bridge



